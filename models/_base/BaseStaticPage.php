<?php

/**
 * This is the model base class for the table "{{static_page}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "StaticPage".
 *
 * Columns in table "{{static_page}}" available as properties of the model,
 * followed by relations of table "{{static_page}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $parent_id
 * @property string $title
 * @property integer $sorting
 * @property string $region
 * @property string $path
 * @property integer $in_main_menu
 *
 * @property StaticPage $parent
 * @property StaticPage[] $staticPages
 * @property StaticPageContent[] $staticPageContents
 */
abstract class BaseStaticPage extends GxActiveRecord
{

    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public function tableName()
    {
        return '{{static_page}}';
    }

    public static function label($n = 1)
    {
        return Yii::t('app', 'StaticPage|StaticPages', $n);
    }

    public static function representingColumn()
    {
        return 'title';
    }

    public function rules()
    {
        return array(
            array('parent_id, sorting, in_main_menu', 'numerical', 'integerOnly' => true),
            array('title', 'length', 'max' => 255),
            array('region', 'length', 'max' => 16),
            array('path', 'length', 'max' => 64),
            array('parent_id, title, sorting, region, path, in_main_menu', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, parent_id, title, sorting, region, path, in_main_menu', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
            'parent' => array(self::BELONGS_TO, 'StaticPage', 'parent_id'),
            'staticPages' => array(self::HAS_MANY, 'StaticPage', 'parent_id'),
            'staticPageContents' => array(self::HAS_MANY, 'StaticPageContent', 'page_id'),
        );
    }

    public function pivotModels()
    {
        return array(
        );
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('app', 'ID'),
            'parent_id' => null,
            'title' => Yii::t('app', 'Title'),
            'sorting' => Yii::t('app', 'Sorting'),
            'region' => Yii::t('app', 'Region'),
            'path' => Yii::t('app', 'Path'),
            'in_main_menu' => Yii::t('app', 'In Main Menu'),
            'parent' => null,
            'staticPages' => null,
            'staticPageContents' => null,
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('parent_id', $this->parent_id);
        $criteria->compare('title', $this->title, true);
        $criteria->compare('sorting', $this->sorting);
        $criteria->compare('region', $this->region, true);
        $criteria->compare('path', $this->path, true);
        $criteria->compare('in_main_menu', $this->in_main_menu);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}